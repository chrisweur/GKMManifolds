FUTURE PROJECTS:

* Intersection (co)homology of sheaves on moment graphs (Braden & MacPherson)

* Interface with toric vector bundles

* Moment graph homology [BGH02, GZ papers]

* Equivariant Chow cohomology




NAMING SCHEMA RENEWAL:

Torus
--Type of HashTable
--keys: ring, (dimension?), (Variety?)


VarietyWithTorusAction
--Type of Type


EquivariantMap
--Type of Type

--map(X,Y,List) will create this?

EquivariantKClass
--Type of Type

--makeKClass?


makeTorus
--a method
--input: an integer n
--output: a Torus with the key ring, whose value is QQ[T_0^\pm, ..., T_(n-1)^\pm].
--also initializes a new VarietyWithTorusAction of (Mutable?)HashTable whose keys are: torus, points, (MomentGraph), (charts)
--and also initializes EquivariantMap and EquivariantKClass?




POSSIBLE ISSUES:

Always have to make the torus first.  But if one has a NormalToricVariety, how will making this into a 
VarietyWithTorusAction work?




MUCH SIMPLER ALTERNATIVE:
TVariety --> GKMVariety
tVariety --> makeGKMVariety
TMap --> EquivariantMap
TKClass --> EquivariantKClass
tKClass --> makeKClass or makeEquivariantKClass(?...)
tMap --> map
tChi --> euler
ampleTKClass --> OO_X(1) or ampleKClass
trivialTKClass --> OO_X or trivialKClass




MISC:

ask about "getAttribute", "hasAttribute", and "ReverseDictionary"

ask about the net and printing name stuff


EquivariantMap has two keys; for one of them: should it be "gkmManifold"? "GKMManifold"?

"hilb"? "KPolynomial"? "HilbertSeriesNumerator"? 












